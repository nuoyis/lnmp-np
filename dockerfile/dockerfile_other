# Github 编译版本
FROM debian:12 as builder

# 设置默认 shell
SHELL ["/bin/bash", "-c"]

## 定义版本变量
#ARG NGINX_VERSION=1.27.3
#ARG PHP_LATEST_VERSION=8.4.2
#ARG PHP_STABLE_VERSION=8.1.31
#ARG PHP_REDIS_VERSION=6.1.0

# 更换华为软件源，并安装基础依赖
RUN sed -i 's/http:\/\/deb.debian.org/https:\/\/mirrors.huaweicloud.com/g' /etc/apt/sources.list.d/debian.sources && \
    apt-get -o Acquire::https::Verify-Peer=false -o Acquire::https::Verify-Host=false update -y && \
    apt-get -o Acquire::https::Verify-Peer=false -o Acquire::https::Verify-Host=false upgrade -y && \
    apt-get -o Acquire::https::Verify-Peer=false -o Acquire::https::Verify-Host=false install -y --no-install-recommends \
        ca-certificates \
        vim \
        jq \
        make \
        procps \
        gcc \
        inetutils-ping \
        pkg-config \
        g++ \
        curl \
        libpcre3 \
        libpcre3-dev \
        zlib1g-dev \
        openssl \
        libssl-dev \
        libxslt1-dev \
        libpng-dev \
        libjpeg-dev \
        libfreetype6-dev \
        libxml2-dev \
        libsqlite3-dev \
        libbz2-dev \
        libcurl4-openssl-dev \
        libxpm-dev \
        libzip-dev \
        libonig-dev \
        libgd-dev \
        libgeoip-dev \
        supervisor && \
    apt-get clean && rm -rf /var/lib/apt/lists/*

# 获取最新nginx版本
RUN export CURL_CA_BUNDLE="" && \
    nginx_version=$(curl -s "https://api.github.com/repos/nginx/nginx/releases/latest" | jq -r '.name' | grep -oP '\d+\.\d+\.\d+' | head -n 1) && \
    latest_php_version=$(curl -s "https://api.github.com/repos/php/php-src/releases" | jq -r '.[0].name' | grep -oP '\d+\.\d+\.\d+' | head -n 1) && \
    stable_php_version=$(curl -s "https://api.github.com/repos/php/php-src/releases" | jq -r '.[].name' | grep -oP '8\.1\.\d+' | head -n 1) && \
    # 如果没有获取到版本，使用默认值
    NGINX_VERSION=${NGINX_VERSION:-"1.27.3"} && \
    PHP_LATEST_VERSION=${PHP_LATEST_VERSION:-"8.4.2"} && \
    PHP_STABLE_VERSION=${PHP_STABLE_VERSION:-"8.1.31"} && \
    PHP_REDIS_VERSION=6.1.0

# 目录初始化
RUN mkdir -p /nuoyis-build/php-$PHP_LATEST_VERSION/ext/php-redis \
    /nuoyis-build/php-$PHP_STABLE_VERSION/ext/php-redis \
    /nuoyis-web/{logs/nginx,nginx/{conf,webside/default,server/$NGINX_VERSION/conf/ssl}} \
    /var/run/php/{81,84}

# 下载源码
WORKDIR /nuoyis-build
RUN curl -sSOL https://mirrors.huaweicloud.com/nginx/nginx-$NGINX_VERSION.tar.gz && \
    curl -sSOL https://ghproxy.cc/https://github.com/php/php-src/archive/refs/tags/php-$PHP_LATEST_VERSION.zip && \
    curl -sSOL https://ghproxy.cc/https://github.com/php/php-src/archive/refs/tags/php-$PHP_STABLE_VERSION.zip && \
    curl -sSOL https://ghproxy.cc/https://github.com/phpredis/phpredis/archive/refs/tags/$PHP_REDIS_VERSION.tar.gz && \
    tar -xzf nginx-$NGINX_VERSION.tar.gz && \
    tar -xzf php-$PHP_LATEST_VERSION.tar.gz && \
    tar -xzf php-$PHP_STABLE_VERSION.tar.gz && \
    tar -xzf $PHP_REDIS_VERSION.tar.gz

# Nginx编译
WORKDIR /nuoyis-build/nginx-$NGINX_VERSION
RUN sed -i 's/#define NGINX_VERSION\s\+".*"/#define NGINX_VERSION      \"$NGINX_VERSION\"/g' ./src/core/nginx.h && \
    sed -i 's/"nginx\/" NGINX_VERSION/"nuoyis server"/g' ./src/core/nginx.h && \
    sed -i 's/Server: nginx/Server: nuoyis server/g' ./src/http/ngx_http_header_filter_module.c && \
    sed -i 's/"Server: " NGINX_VER CRLF/"Server: nuoyis server" CRLF/g' ./src/http/ngx_http_header_filter_module.c && \
    sed -i 's/"Server: " NGINX_VER_BUILD CRLF/"Server: nuoyis server" CRLF/g' ./src/http/ngx_http_header_filter_module.c && \
    ./configure --prefix=/nuoyis-web/nginx/server/$NGINX_VERSION \
                --user=nuoyis-web --group=nuoyis-web \
                --with-compat \
                --with-file-aio \
                --with-threads \
                --with-http_addition_module \
                --with-http_auth_request_module \
                --with-http_dav_module \
                --with-http_flv_module \
                --with-http_gunzip_module \
                --with-http_gzip_static_module \
                --with-http_mp4_module \
                --with-http_random_index_module \
                --with-http_realip_module \
                --with-http_secure_link_module \
                --with-http_slice_module \
                --with-http_ssl_module \
                --with-http_stub_status_module \
                --with-http_sub_module \
                --with-http_v2_module \
                --with-mail \
                --with-mail_ssl_module \
                --with-stream \
                --with-stream_realip_module \
                --with-stream_ssl_module \
                --with-stream_ssl_preread_module \
                --with-cc-opt='-static -s' \
                --with-ld-opt=-static && \
    make -j$(nproc) && make install

# 复制 PHP Redis 源码
RUN cp -r /nuoyis-build/phpredis-$PHP_REDIS_VERSION/* /nuoyis-build/php-$PHP_LATEST_VERSION/ext/php-redis && \
    cp -r /nuoyis-build/phpredis-$PHP_REDIS_VERSION/* /nuoyis-build/php-$PHP_STABLE_VERSION/ext/php-redis

RUN for version in $PHP_LATEST_VERSION $PHP_STABLE_VERSION; do \
    cd /nuoyis-build/php-$version && \
    ./configure --prefix=/nuoyis-web/php/$version/ \
            --enable-static \
            --disable-shared \
            --with-config-file-path=/nuoyis-web/php/$version/etc/ \
            --with-curl \
            --with-freetype \
            --enable-gd \
            --with-jpeg \
            --with-gettext \
            --with-libdir=lib64 \
            --with-libxml \
            --with-mysqli \
            --with-openssl \
            --with-pdo-mysql \
            --with-pdo-sqlite \
            --with-pear \
            --enable-sockets \
            --with-mhash \
            --with-ldap-sasl \
            --with-xsl \
            --with-zlib \
            --with-zip \
            --with-bz2 \
            --with-iconv \
            --enable-fpm \
            --enable-pdo \
            --enable-bcmath \
            --enable-mbregex \
            --enable-mbstring \
            --enable-opcache \
            --enable-pcntl \
            --enable-shmop \
            --enable-soap \
            --enable-ftp \
            --with-xpm \
            --enable-xml \
            --enable-sysvsem \
            --enable-cli \
            --enable-intl \
            --enable-calendar \
            --enable-static \
            --enable-ctype \
            --enable-mysqlnd \
            --enable-session \
            --enable-redis && \
    make -j$(nproc) && make install; \
done;

# 删除非必要软件包以及处理php启动文件
RUN apt-get autoremove --purge -y \
    make \
    procps \
    gcc \
    jq \
    procps \
    inetutils-ping \
    pkg-config \
    libssl-dev \
    g++ && \
    apt-get remove -y \
    libpcre3-dev \
    zlib1g-dev \
    libpng-dev \
    libjpeg-dev \
    libfreetype6-dev \
    libbz2-dev \
    libcurl4-openssl-dev \
    libxpm-dev \
    libgd-dev && \
    apt-get clean && \
    rm -rf /var/cache/apt/* /nuoyis-build /var/lib/apt/lists/* /tmp/* /var/tmp/* && \
    mv /nuoyis-web/php/$PHP_LATEST_VERSION/etc/php-fpm.conf.default /nuoyis-web/php/$PHP_LATEST_VERSION/etc/php-fpm.conf &&\
    mv /nuoyis-web/php/$PHP_STABLE_VERSION/etc/php-fpm.conf.default /nuoyis-web/php/$PHP_STABLE_VERSION/etc/php-fpm.conf \

# 配置文件添加
ADD config/nginx.conf.txt /nuoyis-web/nginx/server/$NGINX_VERSION/conf/nginx.conf
ADD config/index.html /nuoyis-web/nginx/webside/default/index.html
ADD config/ssl/default.pem /nuoyis-web/nginx/server/$NGINX_VERSION/conf/ssl/default.pem
ADD config/ssl/default.key /nuoyis-web/nginx/server/$NGINX_VERSION/conf/ssl/default.key
ADD config/start-php-84.conf.txt /nuoyis-web/nginx/server/$NGINX_VERSION/conf/start-php-84.conf
ADD config/path.conf.txt /nuoyis-web/nginx/server/$NGINX_VERSION/conf/path.conf
ADD config/start-php-81.conf.txt /nuoyis-web/nginx/server/$NGINX_VERSION/conf/start-php-81.conf
ADD config/84php.ini.txt /nuoyis-web/php/$PHP_LATEST_VERSION/etc/php.ini
ADD config/fpm-84.conf.txt /nuoyis-web/php/$PHP_LATEST_VERSION/etc/php-fpm.d/fpm.conf
ADD config/81php.ini.txt /nuoyis-web/php/$PHP_STABLE_VERSION/etc/php.ini
ADD config/fpm-81.conf.txt /nuoyis-web/php/$PHP_STABLE_VERSION/etc/php-fpm.d/fpm.conf

# 新增步骤：收集关键二进制的共享库依赖（仅复制必要的 .so 文件）
RUN mkdir -p /runner-libs && \
    for bin in /nuoyis-web/nginx/server/$NGINX_VERSION/sbin/nginx /nuoyis-web/php/$PHP_LATEST_VERSION/sbin/php-fpm /nuoyis-web/php/$PHP_STABLE_VERSION/sbin/php-fpm; do \
       ldd $bin | awk '{if($3 ~ /^\//) print $3}' | sort -u | xargs -I {} cp --parents {} /runner-libs; \
    done

# 创建最终镜像
FROM debian:bookworm-slim as runner

# 设置默认 shell
SHELL ["/bin/bash", "-c"]

# 复制 nuoyis-web文件夹
COPY --from=builder /nuoyis-web /nuoyis-web
# 复制 必要的 so依赖
COPY --from=builder /runner-libs/lib /lib

# 必要的初始化
RUN useradd -u 2233 -m -s /sbin/nologin nuoyis-web && \
    mkdir -p /var/run/php/{81,84} && \
    mkdir -p /lib /lib64 /usr/lib /usr/lib64 /usr/lib/x86_64-linux-gnu && \
    sed -i 's/http:\/\/deb.debian.org/https:\/\/mirrors.huaweicloud.com/g' /etc/apt/sources.list.d/debian.sources && apt-get -o Acquire::https::Verify-Peer=false -o Acquire::https::Verify-Host=false update -y && apt-get -o Acquire::https::Verify-Peer=false -o Acquire::https::Verify-Host=false upgrade -y && apt-get -o Acquire::https::Verify-Peer=false -o Acquire::https::Verify-Host=false install -y ca-certificates && \
    apt-get update && apt-get install -y --no-install-recommends supervisor curl && \
    apt-get clean && rm -rf /var/lib/apt/lists/* && \
    ln -s /nuoyis-web/nginx/server/$NGINX_VERSION/sbin/nginx /usr/bin/nginx && \

ADD config/supervisord.conf.txt /etc/supervisord.conf

# 暴露端口
EXPOSE 80 443

# 设置容器的入口点
ENTRYPOINT ["/usr/bin/supervisord", "-c", "/etc/supervisord.conf"]