name: nuoyis Docker Build

on:
  push:
    branches:
      - main
    paths-ignore:
      - 'build.json'
      - '.gitlab-ci.yml'
      - 'readme.md'
      
permissions:
  contents: write

jobs:
  version_update:
    runs-on: ubuntu-latest
    outputs:
      new_version: ${{ steps.set_version.outputs.new_version }}
    steps:  
      - name: Checkout
        uses: actions/checkout@v2
        with:
          persist-credentials: false
        
      - name: Install jq
        run: sudo apt-get install -y jq

      - name: Read Current Version
        id: read_version
        run: echo "current_version=$(jq -r '.version' build.json)" >> $GITHUB_ENV

      - name: Increment Version
        id: set_version
        run: |
          current_version="${{ env.current_version }}"
          IFS='.' read -ra version_parts <<< "$current_version"
          
          if [ "${version_parts[2]}" -ge 9 ]; then
            version_parts[1]=$((version_parts[1] + 1))
            version_parts[2]=0
          else
            version_parts[2]=$((version_parts[2] + 1))
          fi
          
          new_version="${version_parts[0]}.${version_parts[1]}.${version_parts[2]}"
          echo "new_version=$new_version" >> $GITHUB_ENV
          echo "new_version=$new_version" >> $GITHUB_OUTPUT

          jq ".version = \"$new_version\"" build.json > temp.json
          mv temp.json build.json

      - name: Commit and Push Version Update
        run: |
          git config --global user.name "github-actions"
          git config --global user.email "github-actions@github.com"

          git add build.json
          git commit -m "Bump version to ${{ env.new_version }}" || exit 0

          # 使用 GitHub Actions 提供的 GITHUB_TOKEN 进行身份验证
          git remote set-url origin https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}.git
          git push origin main

  build_and_push:
    name: Build and Push Docker Image
    needs: version_update
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set Version from Previous Job
        run: echo "VERSION=${{ needs.version_update.outputs.new_version }}" >> $GITHUB_ENV
      
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to aliyunHub
        run: docker login --username=${{ secrets.DOCKER_USERNAME }} --password=${{ secrets.DOCKER_PASSWORD }} registry.cn-hangzhou.aliyuncs.com

      - name: Build Docker Image
        run: |
          echo "Building Docker image for version: $VERSION"
          bash build.sh 1 $VERSION

      - name: Tag and push Docker Image
        run: |
          IMAGE_MULTI="registry.cn-hangzhou.aliyuncs.com/nuoyis/nuoyis-lnmp-np:$VERSION"
          IMAGE_LIST="\
          ${IMAGE_MULTI}-linux-amd64 \
          ${IMAGE_MULTI}-linux-386 \
          ${IMAGE_MULTI}-linux-arm64 \
          ${IMAGE_MULTI}-linux-arm-v7"
          echo "Creating manifest for: $IMAGE_LIST"
          docker buildx imagetools create -t "$IMAGE_MULTI" $IMAGE_LIST
          docker tag "$IMAGE_MULTI" "registry.cn-hangzhou.aliyuncs.com/nuoyis/nuoyis-lnmp-np:latest"
          docker push "registry.cn-hangzhou.aliyuncs.com/nuoyis/nuoyis-lnmp-np:latest"
