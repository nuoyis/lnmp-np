stages:
  - build
  - deploy

nuoyis_image_tag:
  image: ubuntu:latest
  stage: build
  except:
    - build.json
    - README.md
  script:
    - echo "Changing to domestic mirrors for faster package installation"
    - sed -i 's/http:\/\/archive.ubuntu.com/https:\/\/mirrors.aliyun.com/g' /etc/apt/sources.list  # 更换为阿里云镜像源
    - sed -i 's/http:\/\/security.ubuntu.com/https:\/\/mirrors.aliyun.com/g' /etc/apt/sources.list  # 更换为阿里云镜像源
    - apt-get -o Acquire::https::Verify-Peer=false -o Acquire::https::Verify-Host=false update -y && apt-get -o Acquire::https::Verify-Peer=false -o Acquire::https::Verify-Host=false upgrade -y && apt-get -o Acquire::https::Verify-Peer=false -o Acquire::https::Verify-Host=false install -y ca-certificates  # 更新源列表
    - apt-get install -y git curl build-essential jq  # 安装常用工具，如 git, curl 等
    - current_version=$(jq -r '.version' build.json)
    - IFS='.' read -ra version_parts <<< "$current_version"
    - ((version_parts[2]++))
    - new_version="${version_parts[0]}.${version_parts[1]}.${version_parts[2]}"
    - echo "VERSION=$new_version" > nuoyis.env
  artifacts:
    paths:
      - nuoyis.env
  only: 
    - main

nuoyis_image_build:
  image: ubuntu:latest
  timeout: 10 hours
  stage: deploy
  dependencies:
    - nuoyis_image_tag
  services:
    - name: docker:24.0.5-dind
      alias: docker
      command: ["--insecure-registry=0.0.0.0/0"]
  before_script:
  - sed -i 's|http://archive.ubuntu.com|https://mirrors.aliyun.com|g' /etc/apt/sources.list
  - sed -i 's|http://security.ubuntu.com|https://mirrors.aliyun.com|g' /etc/apt/sources.list
  - apt-get update && apt-get install -y curl jq git docker.io qemu-user-static binfmt-support ca-certificates
  - docker --version

  # 安装 docker buildx
  - mkdir -p ~/.docker/cli-plugins
  - curl -sSL https://github.com/docker/buildx/releases/latest/download/buildx-v0.13.1.linux-amd64 -o ~/.docker/cli-plugins/docker-buildx
  - chmod +x ~/.docker/cli-plugins/docker-buildx
  - docker buildx version

  # 安装 QEMU 以支持多架构构建
  - docker run --privileged --rm tonistiigi/binfmt --install all

  # 初始化 buildx 构建器
  - docker buildx create --use --name multi-builder --bootstrap || docker buildx use multi-builder
  - chmod +x build.sh
  script:
    - export $(cat nuoyis.env | xargs)
    - echo "构建版本号 $VERSION"
    - REGISTRY_URL="registry.cn-hangzhou.aliyuncs.com"
    - IMAGE_NAME="nuoyis/nuoyis-lnmp"
    - IMAGE_MULTI="$REGISTRY_URL/$IMAGE_NAME:$VERSION"
    - IMAGE_LIST="\
      ${IMAGE_MULTI}-linux-amd64 \
      ${IMAGE_MULTI}-linux-arm64 \
      ${IMAGE_MULTI}-linux-arm-v7"
    - bash build.sh 2 $VERSION
    - docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD $REGISTRY_URL
    - echo "创建 manifest 并打标签"
    - docker buildx imagetools create -t "$IMAGE_MULTI" $IMAGE_LIST
    - docker tag "$IMAGE_MULTI" "$REGISTRY_URL/$IMAGE_NAME:latest"
    - docker push "$REGISTRY_URL/$IMAGE_NAME:latest"
    - jq ".version = \"$VERSION\"" build.json > temp.json
    - mv temp.json build.json
    - git config user.name "nuoyis"
    - git config user.email "wkkjonlykang@vip.qq.com"
    - git remote rm origin
    - git remote add origin http://oauth2:$GitLab_Access_Tokens@192.168.223.1:2236/nuoyis/nuoyis-lnmp-np.git
    - git add build.json
    - git commit -m "use to $VERSION"
    - git push origin HEAD:main -o ci.skip
  only:
    - main
